#!/usr/bin/env bash
#-------------------------------------------------------------------------------
#
# Setup a local development environment.
#
#-------------------------------------------------------------------------------

DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd) # Directory this script is in.
DIR_ROOT="${DIR/\/bin/}"                          # Base directory of repository.
DIR_CURRENT=$(pwd)

#
# $1 Message to print.
#
function success_message() {
  printf "\e[32mSuccess:\e[39m %s\n" "${1}"
}

#
# $1 Message to print.
#
function failure_message() {
  printf "\e[31mError:\e[39m %s\n" "${1}"
}

#
# $1 Message to print.
#
function info_message() {
  printf "\e[34mInfo:\e[39m %s\n" "${1}"
}

#
# $@ Command to execute.
#
function ensure() {
  "$@"
  local status=$?
  if [[ ${status} -ne 0 ]]; then
    exit ${status}
  fi
}

#
# $1 URL to test.
# $2 Maximum number of tries.
#
function wait_for_url() {
  SMOKE_TEST_URL="${1}"

  TRIES=0
  MAX_TRIES=$2

  while [[ true ]]; do
    if [[ "$TRIES" -ge "$MAX_TRIES" ]]; then
      failure_message "Smoke test failed."
      exit 1
      break
    fi

    if curl --silent -I "${SMOKE_TEST_URL}" | grep "200 OK"; then
      success_message "Smoke test success."
      break
    fi

    TRIES=$((TRIES + 1))
    echo "Waiting for site to setup... [${TRIES}/${MAX_TRIES}]"
    sleep 2
  done
}

cd "${DIR_ROOT}" || exit

# Cleanup any previously created environment.
docker-compose down --volumes --rmi local

# Provision local environment.
docker-compose up --detach

# Ensure files have correct permissions.
ensure docker exec -it \
  --user root \
  "actions_audit_wp" \
  chown -R www-data:www-data /var/www/html/

# Wait till we have a running application before continuing.
wait_for_url "http://localhost:8080/wp-admin/install.php" 30

# Complete Wordpress install that requires running application.
docker exec -it \
  --user www-data \
  "actions_audit_wp" \
  /usr/local/bin/setup

cd "${DIR_CURRENT}" || exit
